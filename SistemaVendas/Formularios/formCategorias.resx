<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAB6ISURBVHhe7d3d
        j6Z3edhxA0kPSiAvbc/atH9AqyaBqOkZlSChorjY4ye7trGDksqyObIAYRHL8YqqEq2aAxB1sdSTpBSU
        /guJ5AUbasDC2OsXDDjkAPAbfoNd7669nru/e+aasJ69bO/LPPdz37/r85U+soXM7szuNb/rN8/zzMxl
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkqS+Gy6//B3D1ta7h9XqmuGqq/5z81fN15sHm8eb55rTzQCwIeMZNJ5F45n0QDOeUeNZ
        9emds2u1etd4lsWxJilruO66t7eF/972gfOZ5r7m1Sb7gANYmsfb+XZn++dq+NCHfi2OPalu7Xb8q82f
        tA+Ko80r8YEC0LPxrLurXQj+eLj22nfGcSj133DZZW9pS//97QPgy81L8QEBUNF4Bn6pXQb+YDwb45iU
        +mo4cuStbcg/2IZ9fHg/+0AAqGu1Otb+ef3wnvf8Uhyb0rJrQ/22nYe6rrrqe68ZdgDOtbX1WDs3PzKe
        nXGMSsurDfC7mm+mQw7AG7m/nZ//No5TaRkN11zz6214P9t4JT/Axdsetrb+sl0E/kkcr9J8i+f5n9k3
        xABcvKfbJeADccxK82p84Uob0iONz/oBDt5289l2EfgHcexKm2+48sp/3gbz3rMGFYD1+Fq7BPxmHL/S
        5mqD+K42kE/tG1AA1ufJ9onX78QxLE1fG8B/1wbxxX2DCcD6/bz5/TiOpelqn/lf0Ybv5FnDCMC0Trez
        +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
        U7EGVLU2BM/uGwoA+vdMrAFVrQ3B3+0bCgD693isAVVtWK2OJYMBQM9Wq+/EGlDV2iB87ZzBAKB3d8ca
        UNXaEPzVvqEAoHdbW/8n1oCq1gbh0+cMBgB9W63+LNaAqtYG4dpzBgOAvq1Wh2INqGrD1ta70+EAoF+r
        1W/FGlDVhssvf0cbhlfPGQ4AenVmuO66t8caUOXaMHx733AA0KvV6ptx/Kt6bSD++zkDAkCvPhPHv6rX
        boMfSAYEgB5tbf1BHP+qXrwO4OVzhgSA3pz2/L9eUxuKu/YNCQC9Wa3+Oo59abc2FH+SDgsAPbk+jn1p
        t+Haa9/ZBuPEvkEBoB8nxqd849iXflEbji/vGxYA+vG/47iXXtv4ytBkYADowWr1vjjupdc2XHbZW9qQ
        PHDO0ACwbKvVd8YzPo576dzaoBw+Z3AAWLbV6qo45qW8NiRva8Py3XOGB4Bl2tp6ZDhy5K1xzEuvX7sE
        fCQdIgCWZ2vrw3G8S2/ceFNsQ/ONc4YIgKW5b3xkN4536c0brrzyd9vg+DHBAMv1avvs/9/EsS6df21w
        7kwGCoBl+B9xnEsX1rBa/UYboKf3DRQA8/fkcM01vx7HuXThtSH69832WUMFwLxtD1tbH4xjXLr42iD9
        t2TAAJin/xLHt3RpDe95zy8Nq9U9yZABMCer1f8bbrjhl+P4li69NlS/2YbryXOGDYC5+Mlw5ZX/NI5t
        6eBql4B/1Qbs+X0DB8DmvThsbf12HNfSwdeG7D3NybOGDoDNOt2W/3vjmJbW17BaXdUG7sy+AQRgeuNZ
        fGUcz9L6a7fND7Wh80gAwOacamfxH8axLE1XG77x6YAXzhpGAKbx82G1el8cx9L0DVdc8S/bIP5o32AC
        sD5PeMGfZtH4ZSdtIO/eN6AAHLxvDIcP/4s4fqXNt/PNgq666kjjJwgCHLzxW7J/1jf50WwbVqsPtCH1
        A4QADs6T7Wx9fxyz0nwbPvShX2sD+9nGlwoCXLzx5/n/5XD11f84jldpGQ1XXvk7bYDv3TfQALy5b7cz
        9PfiOJWW17Bava0N8vXNo2cNNgCZra1H2rl53XDkyFvjGJWW3TjMbbA/2Ab8W+cMPAAPNtePnzTFsSn1
        1XDZZW9pQ/77zRebE032gQBQwfHmi23pv288G+OYlPpvuPzyd7TB/0j7APib5uX4gADo2el27v31sLX1
        R+2fvxLHoVS34YMf/IftA+K97YPjM+2D4p72TxcCoAfj90a5rxm/MmrVzrdfjWNPUtZw3XVvbxeC324f
        MIeb25svN+N3G7y/ebz5aXO6yT7gAKYwnkHjWTSeSePZ9NXmS23J/1lzaOcMa5/cxLEmSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        Seqyyy77/++ssnMH+iNTAAAAAElFTkSuQmCC
</value>
  </data>
</root>